# "Template" workflow that can be called by other workflows as well as manually triggered
# https://docs.github.com/en/actions/learn-github-actions/reusing-workflows

name: Build Artifact & Test Local Installation

on:
  workflow_call:  # allows calls from other workflows
    inputs:
      package-dir:
        description: "Directory of package to build"
        required: true
        type: string
      package-name:
        description: "Import name of package to build (e.g. klio_core, not klio-core)"
        required: true
        type: string
  workflow_dispatch:  # manual trigger
    inputs:
      package-dir:
        description: "Directory of package to build"
        required: true
        type: string
      package-name:
        description: "Import name of package to build (e.g. klio_core, not klio-core)"
        required: true
        type: string

jobs:
  build_install:
    name: "Build & Install ${{ github.event.inputs.package-name }}"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - name: Set up Python 3.8
        uses: "actions/setup-python@v2"
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          set -xe
          python -VV
          python -m pip install build virtualenv --user

      - name: "${{ github.event.inputs.package-name }}: Build wheel & sdist"
        working-directory: ${{ github.event.inputs.package-dir }}
        run: |
          set -xe
          python -VV
          python -m build --sdist --wheel --outdir dist/ .

      # Last command in this step is to uninstall, so we can try installing
      # the wheel after it
      - name: "${{ github.event.inputs.package-name }}: Test sdist installation"
        working-directory: ${{ github.event.inputs.package-dir }}
        run: |
          set -xe
          python -VV
          python -m virtualenv sdist-test
          source sdist-test/bin/activate
          python -m pip install dist/*.tar.gz
          python -c 'import ${{ github.event.inputs.package-name }}; print(${{ github.event.inputs.package-name }}.__version__)'
          deactivate

      - name: "${{ github.event.inputs.package-name }}: Test wheel installation"
        working-directory: ${{ github.event.inputs.package-dir }}
        run: |
          set -xe
          python -VV
          python -m virtualenv wheel-test
          source wheel-test/bin/activate
          python -m pip install dist/*.whl
          python -c 'import ${{ github.event.inputs.package-name }}; print(${{ github.event.inputs.package-name }}.__version__)'
          deactivate

      # Upload artifact so it can be downloaded & used in other releasing steps
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-${{ github.event.inputs.package-name }}
          path: ${{ github.event.inputs.package-dir }}/dist/*
          retention-days: 1